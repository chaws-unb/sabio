
*** INICIO ***
int: type_specifier->INT
 

a: declaration_specifiers->type_specifier
: direct_declarator->IDENTIFIER
 

=: declarator->direct_declarator
 

1: primary_expression->CONSTANT
: postfix_expression->primary_expression
 

+: unary_expression->postfix_expression 
: cast_expression->unary_expression
: multiplicative_expression->cast_expression
: additive_expression->multiplicative_expression
 

2: primary_expression->CONSTANT
: postfix_expression->primary_expression


;: unary_expression->postfix_expression 
: cast_expression->unary_expression
: multiplicative_expression->cast_expression
: additive_expression->additive_expression + multiplicative_expression
: shift_expression->additive_expression
: relational_expression->shift_expression
: equality_expression->relational_expression
: and_expression->equality_expression
: exclusive_or_expression->and_expression
: inclusive_or_expression->exclusive_or_expression
: logical_and_expression->inclusive_or_expression
: logical_or_expression->logical_and_expression
: conditional_expression->logical_or_expression
: assignment_expression->conditional_expression
: initializer->assignment_expression
: init_declarator->declarator = initializer
: init_declarator_list->init_declarator
: declaration->declaration_specifiers init_declarator_list ;
: external_declaration->declaration
: translation_unit->external_declaration

*** FIM ***
